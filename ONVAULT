#!/bin/bash

# signals bash to stop execution on any fail
set -e

# allow overriding (probably trough Docker Link) default VAULT_PORT at runtime
: ${VAULT_PORT:=tcp://172.17.42.1:14242}

# allow overriding default VAULT_URI at runtime
: ${VAULT_URI:=${VAULT_PORT/tcp/http}}

# allow overriding default VAULT_SSH_KEY at runtime
: ${VAULT_SSH_KEY:=id_rsa}

log () {
  GREEN='\033[1;32m'
  NC='\033[0m' # No Color
  echo -e "${GREEN}[Dockito Vault]${NC} $@"
}

if ! curl -s "${VAULT_URI}/_ping"; then
  COUNTER=0
  echo 'Waiting 10s for dockito/vault to be ready...'
  while ! curl -s "${VAULT_URI}/_ping" && [ $COUNTER != 10 ]; do
    sleep 1
    COUNTER=$[$COUNTER +1]
  done
fi

if curl -s "${VAULT_URI}/_ping"; then
  log "Downloading private keys..."

  mkdir -p ~/.ssh/
  curl -s "${VAULT_URI}/ssh.tgz" | tar -C ~/.ssh/ -zxf -
  chown `whoami` ~/.ssh/*

  log "Using ssh key: $VAULT_SSH_KEY"
  if [[  "$VAULT_SSH_KEY" != "id_rsa" ]]; then
    # configure the ssh to any host to use this ssh key
    echo -e "\nHost *\nIdentityFile ~/.ssh/$VAULT_SSH_KEY" >> ~/.ssh/config
  fi

  log "Executing command: $@"
  eval $@

  log "Removing private keys..."
  rm -rf ~/.ssh/*
else
  log "ERROR: Start the dockito/vault container before using ONVAULT!"
  log "ex: docker run -d -p 172.17.42.1:14242:3000 -v ~/.ssh:/vault/.ssh dockito/vault"
  exit 1
fi
